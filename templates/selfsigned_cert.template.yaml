AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys a lambda functon that generates Self-Signed SSL Certificate and its private key.  The artifact is added to the SSM Parameter Stores"
##############################################################################
#                               Resources                                    #
##############################################################################
Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-eks-rancher/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Resources:
  certGenLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: certGen_Lambda
      Handler: lambda_function.lambda_handler
      Role:
        'Fn::GetAtt':
          - certGenLambdaIamRole
          - Arn
      Runtime: python3.7
      Timeout: 900
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/certGen/lambda.zip'

  certGenLambdaIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: genCert_Lambda_Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: putSsmParametersAllow
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: putssmparamallow
                Effect: Allow
                Action:
                  - ssm:PutParameter
                Resource:
                  - "arn:aws:ssm:*:*:parameter/*"
